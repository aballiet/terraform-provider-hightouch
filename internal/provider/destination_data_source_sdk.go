// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"hightouch/internal/sdk/pkg/models/shared"
	"time"
)

func (r *DestinationDataSourceModel) RefreshFromGetResponse(resp *shared.Destination) {
	if r.Configuration == nil && len(resp.Configuration) > 0 {
		r.Configuration = make(map[string]types.String)
		for key, value := range resp.Configuration {
			result, _ := json.Marshal(value)
			r.Configuration[key] = types.StringValue(string(result))
		}
	}
	r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339))
	r.ID = types.StringValue(resp.ID)
	r.Name = types.StringValue(resp.Name)
	r.Slug = types.StringValue(resp.Slug)
	r.Syncs = nil
	for _, v := range resp.Syncs {
		r.Syncs = append(r.Syncs, types.StringValue(v))
	}
	r.Type = types.StringValue(resp.Type)
	r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339))
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}
